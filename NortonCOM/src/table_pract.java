
import java.io.File;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;
import java.text.SimpleDateFormat;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Abir
 */
public class table_pract extends javax.swing.JFrame {

    /**
     * Creates new form table_pract
     */
    public table_pract() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        model=new DefaultTableModel();
        table = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        disk_label = new javax.swing.JLabel();
        Total_label = new javax.swing.JLabel();
        Used_label = new javax.swing.JLabel();
        Free_label = new javax.swing.JLabel();
        dis_nam = new javax.swing.JLabel();
        Tot_spa = new javax.swing.JLabel();
        Use_spa = new javax.swing.JLabel();
        free_spa = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBox2 = new javax.swing.JComboBox();
        disk_label1 = new javax.swing.JLabel();
        Total_label1 = new javax.swing.JLabel();
        Used_label1 = new javax.swing.JLabel();
        Free_label1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        dis_nam1 = new javax.swing.JLabel();
        Tot_spa1 = new javax.swing.JLabel();
        Use_spa1 = new javax.swing.JLabel();
        free_spa1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(model);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Type", "DIR", "Size"
            }
        ));
        jScrollPane2.setViewportView(table);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "C:", "D:", "E:", "F:" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        disk_label.setText("Disk Name:");

        Total_label.setText("Total Space:");

        Used_label.setText("Used Space:");

        Free_label.setText("Free Space:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "C:", "D:", "E:", "F:" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        disk_label1.setText("Disk Name:");

        Total_label1.setText("Total Space:");

        Used_label1.setText("Used Space:");

        Free_label1.setText("Free Space:");

        model1=new DefaultTableModel();

        jTable1.setModel(model1);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Size"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(74, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Used_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Use_spa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Free_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(free_spa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Total_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Tot_spa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(disk_label)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dis_nam, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(243, 243, 243)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(disk_label1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dis_nam1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Total_label1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tot_spa1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Used_label1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Use_spa1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Free_label1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(free_spa1)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(disk_label)
                    .addComponent(dis_nam)
                    .addComponent(disk_label1)
                    .addComponent(dis_nam1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Total_label)
                    .addComponent(Tot_spa)
                    .addComponent(Total_label1)
                    .addComponent(Tot_spa1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Used_label)
                    .addComponent(Use_spa)
                    .addComponent(Used_label1)
                    .addComponent(Use_spa1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Free_label)
                    .addComponent(free_spa)
                    .addComponent(Free_label1)
                    .addComponent(free_spa1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(68, 68, 68))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
       
        model= (DefaultTableModel)table.getModel();
        sdf = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        if(jComboBox1.getSelectedIndex()==0 ){
        if(temp==1){
            for(int i=0;i<fls.length;i++)
                 model.removeRow(0);
        }
        
        f1 =new File("C:/");
        String col[]=f1.list();
        fls=f1.listFiles();
        dis_nam.setText("C");
        Tot_spa.setText(((double)f1.getTotalSpace()/1073741824)+" GB");
        free_spa.setText(((double)f1.getFreeSpace()/1073741824)+" GB");
        Use_spa.setText((((double)f1.getTotalSpace()/1073741824)-((double)f1.getFreeSpace()/1073741824))+" GB");
         for(int i=0;i<fls.length;i++){
             model.addRow(new Object[]{fls[i].getName(),fls[i].length(),sdf.format(fls[i].lastModified()) });
         }
        temp=1;
              // TODO add your handling code here:
       }
       if(jComboBox1.getSelectedIndex()==1){
        //model= (DefaultTableModel)table.getModel();
         
          if(temp==1){
            for(int i=0;i<fls.length;i++)
                 model.removeRow(0);
        }
             
         f1 =new File("D:/");
         String col[]=f1.list();
         fls=f1.listFiles();
         dis_nam.setText("C");
        Tot_spa.setText(((double)f1.getTotalSpace()/1073741824)+" GB");
        free_spa.setText(((double)f1.getFreeSpace()/1073741824)+" GB");
        Use_spa.setText((((double)f1.getTotalSpace()/1073741824)-((double)f1.getFreeSpace()/1073741824))+" GB");
         
         for(int i=0;i<fls.length;i++){
             model.addRow(new Object[]{fls[i].getName(),fls[i].length(),sdf.format(fls[i].lastModified()) });
         }
         temp=1;
              // TODO add your handling code here:
       }
       if(jComboBox1.getSelectedIndex()==2){
        //model= (DefaultTableModel)table.getModel();
          if(temp==1){
            for(int i=0;i<fls.length;i++)
                 model.removeRow(0);
        }
         f1 =new File("E:/");
         String col[]=f1.list();
         fls=f1.listFiles();
         
         dis_nam.setText("C");
        Tot_spa.setText(((double)f1.getTotalSpace()/1073741824)+" GB");
        free_spa.setText(((double)f1.getFreeSpace()/1073741824)+" GB");
        Use_spa.setText((((double)f1.getTotalSpace()/1073741824)-((double)f1.getFreeSpace()/1073741824))+" GB");
         for(int i=0;i<fls.length;i++){
             model.addRow(new Object[]{fls[i].getName(),fls[i].length(),sdf.format(fls[i].lastModified()) });
         }
         temp=1;
              // TODO add your handling code here:
       }
       if(jComboBox1.getSelectedIndex()==3){
        if(temp==1){
            for(int i=0;i<fls.length;i++)
                 model.removeRow(0);
        }
           
         f1 =new File("F:/");
         String col[]=f1.list();
         fls=f1.listFiles();
         
         dis_nam.setText("C");
        Tot_spa.setText(((double)f1.getTotalSpace()/1073741824)+" GB");
        free_spa.setText(((double)f1.getFreeSpace()/1073741824)+" GB");
        Use_spa.setText((((double)f1.getTotalSpace()/1073741824)-((double)f1.getFreeSpace()/1073741824))+" GB");
        
         for(int i=0;i<fls.length;i++){
             model.addRow(new Object[]{fls[i].getName(),fls[i].length(),sdf.format(fls[i].lastModified()) });
         }
         temp=1;
              // TODO add your handling code here:
       }
       
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:model= (DefaultTableModel)table.getModel();
         model1= (DefaultTableModel)jTable1.getModel();
         sdf1 = new SimpleDateFormat("MM/dd/yyyy HH:mm:ss");
        if(jComboBox2.getSelectedIndex()==0 ){
        if(temp1==1){
            for(int i=0;i<fls1.length;i++)
                 model1.removeRow(0);
        }
        
        f11 =new File("C:/");
        String col[]=f11.list();
        fls1=f11.listFiles();
        dis_nam1.setText("C");
        Tot_spa1.setText(((double)f11.getTotalSpace()/1073741824)+" GB");
        free_spa1.setText(((double)f11.getFreeSpace()/1073741824)+" GB");
        Use_spa1.setText((((double)f11.getTotalSpace()/1073741824)-((double)f11.getFreeSpace()/1073741824))+" GB");
         for(int i=0;i<fls1.length;i++){
             model1.addRow(new Object[]{fls1[i].getName(),fls1[i].length(),sdf1.format(fls1[i].lastModified()) });
         }
         temp1=1;
        
              // TODO add your handling code here:
       }
       if(jComboBox2.getSelectedIndex()==1 ){
        if(temp1==1){
            for(int i=0;i<fls1.length;i++)
                 model1.removeRow(0);
        }
        
        f11 =new File("D:/");
        String col[]=f11.list();
        fls1=f11.listFiles();
        dis_nam1.setText("D");
        Tot_spa1.setText(((double)f11.getTotalSpace()/1073741824)+" GB");
        free_spa1.setText(((double)f11.getFreeSpace()/1073741824)+" GB");
        Use_spa1.setText((((double)f11.getTotalSpace()/1073741824)-((double)f11.getFreeSpace()/1073741824))+" GB");
         for(int i=0;i<fls1.length;i++){
             model1.addRow(new Object[]{fls1[i].getName(),fls1[i].length(),sdf1.format(fls1[i].lastModified()) });
         }
         temp1=1;
        
              // TODO add your handling code here:
       }
       if(jComboBox2.getSelectedIndex()==2 ){
        if(temp1==1){
            for(int i=0;i<fls1.length;i++)
                 model1.removeRow(0);
        }
        
        f11 =new File("E:/");
        String col[]=f11.list();
        fls1=f11.listFiles();
        dis_nam1.setText("E");
        Tot_spa1.setText(((double)f11.getTotalSpace()/1073741824)+" GB");
        free_spa1.setText(((double)f11.getFreeSpace()/1073741824)+" GB");
        Use_spa1.setText((((double)f11.getTotalSpace()/1073741824)-((double)f11.getFreeSpace()/1073741824))+" GB");
         for(int i=0;i<fls1.length;i++){
             model1.addRow(new Object[]{fls1[i].getName(),fls1[i].length(),sdf1.format(fls1[i].lastModified()) });
         }
         temp1=1;
        
              // TODO add your handling code here:
       }
       if(jComboBox2.getSelectedIndex()==3 ){
        if(temp1==1){
            for(int i=0;i<fls1.length;i++)
                 model1.removeRow(0);
        }
        
        f11 =new File("F:/");
        String col[]=f11.list();
        fls1=f11.listFiles();
        dis_nam1.setText("F");
        Tot_spa1.setText(((double)f11.getTotalSpace()/1073741824)+" GB");
        free_spa1.setText(((double)f11.getFreeSpace()/1073741824)+" GB");
        Use_spa1.setText((((double)f11.getTotalSpace()/1073741824)-((double)f11.getFreeSpace()/1073741824))+" GB");
         for(int i=0;i<fls1.length;i++){
             model1.addRow(new Object[]{fls1[i].getName(),fls1[i].length(),sdf1.format(fls1[i].lastModified()) });
         }
        temp1=1;
              // TODO add your handling code here:
       }
       
        
              // TODO add your handling code here:
       
       
    }//GEN-LAST:event_jComboBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(table_pract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(table_pract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(table_pract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(table_pract.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new table_pract().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Free_label;
    private javax.swing.JLabel Free_label1;
    private javax.swing.JLabel Tot_spa;
    private javax.swing.JLabel Tot_spa1;
    private javax.swing.JLabel Total_label;
    private javax.swing.JLabel Total_label1;
    private javax.swing.JLabel Use_spa;
    private javax.swing.JLabel Use_spa1;
    private javax.swing.JLabel Used_label;
    private javax.swing.JLabel Used_label1;
    private javax.swing.JLabel dis_nam;
    private javax.swing.JLabel dis_nam1;
    private javax.swing.JLabel disk_label;
    private javax.swing.JLabel disk_label1;
    private javax.swing.JLabel free_spa;
    private javax.swing.JLabel free_spa1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    DefaultTableModel model1;
    public javax.swing.JTable table;
    DefaultTableModel model;
    // End of variables declaration//GEN-END:variables
      public File f1;
      public File fls[];
      public int temp=0;
      public File f11;
      public File fls1[];
      public int temp1=0;
      public SimpleDateFormat sdf;
      public SimpleDateFormat sdf1;

}
